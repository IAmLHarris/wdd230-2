CSS Specificity and Redundancy

Hello fellow classmates! My project this week is over Specificity and Redundancy in CSS.

So, what _is_ specificity?

Specificity is how CSS decides the priority of the rules you write are decided.
The priority of these are the weight of the declaration.

Simply put, it's the priority list CSS looks at when applying declarations.
The higher the weight, the higher it will be prioritized.

So, what has the highest priority then?

Usually, the more specific, the weightier it is.
ID selectors being for individual elements have the highest weight.
-list examples-
Class selectors being more of a general group has the second highest weight.
-list examples-
Type selectors being broader and more common than the last two have the third highest weight.
-list examples-

While you are writing your CSS, remember the weight of these three, or else it could lead to some real headaches!

Moving on to our next topic, what is redundancy?

Redundancy is something we want to avoid when making websites. It can be a lot of different things, but the common theme is unnecesary excess in your CSS.

Repeated values are usually the main culprit here. We want to avoid setting and resetting declarations. In the example to the right, you can see how main is being used twice, for no real good reason. If you've already made a declaration on it, don't say it again.

Lengthy rules are another good example of what to avoid. To avoid this, use shorthand as much as possible, it'll make paragraphs of text into single lines. Easily readable CSS makes things easier for everyone.

Excess comments can range from leftovers from boilerplates, to old stickynote comments, to just something unimportant and obvious. What could be an easily readable file can be turned into a graveyard of fluff.

And with that, you know everything I do about Specificity and Redundancy! I hope this can help out in the future with your goals.
